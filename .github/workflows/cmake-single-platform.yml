# This workflow builds and tests the Aphrodite project using CMake presets
name: Aphrodite CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Ubuntu Clang Release",
            preset: "clang-release",
            ci_preset: "ci-clang-release"
          }
          - {
            name: "Ubuntu Clang Debug",
            preset: "clang-debug",
            ci_preset: "ci-clang-debug"
          }

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./container/Dockerfile
        tags: aphrodite-builder:latest
        load: true
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    # This step is necessary to prevent cache from growing indefinitely
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ matrix.config.name }}-ccache
        max-size: 500M

    - name: Cache CPM packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/CPM
        key: ${{ runner.os }}-cpm-${{ hashFiles('**/cmake/CPM.cmake', '**/CPM.cmake', '**/CPM.cmake.in', '**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-cpm-

    - name: Build with Docker (Standard)
      if: ${{ !contains(matrix.config.preset, 'debug') }}
      run: |
        mkdir -p ${{ github.workspace }}/.ccache
        docker run --rm \
          -v ${{ github.workspace }}:/aphrodite \
          -v ${{ github.workspace }}/.ccache:/ccache \
          aphrodite-builder:latest \
          ${{ matrix.config.preset }}

    - name: Build with Docker (Testing)
      if: ${{ contains(matrix.config.preset, 'debug') }}
      run: |
        mkdir -p ${{ github.workspace }}/.ccache
        docker run --rm \
          -v ${{ github.workspace }}:/aphrodite \
          -v ${{ github.workspace }}/.ccache:/ccache \
          aphrodite-builder:latest \
          ${{ matrix.config.ci_preset }}

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: aphrodite-${{ matrix.config.preset }}
        path: |
          build-container/**
        retention-days: 7

